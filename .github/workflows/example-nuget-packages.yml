name: example-nuget-packages

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  # commitlint:
  #   name: Commitlint
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #     - run: npm install @commitlint/{config-conventional,cli}
  #     - uses: wagoid/commitlint-github-action@v6

  build-and-test:
    uses: ./.github/workflows/_dotnet-build-and-test.yml
    with:
      working-directory: "./examples/NugetPackages"
      os-list: "ubuntu-latest"
      dotnet-version-list: "9.0.x"

  pack_pr:
    name: Version, Pack, Publish PR preview
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore packages
        working-directory: "./examples/NugetPackages"
        run: dotnet restore --use-lock-file

      - name: Determine version (GitVersion)
        id: gitversion
        uses: gittools/actions/gitversion/execute@v2
        with:
          useConfigFile: true

      - name: Pack all projects
        working-directory: "./examples/NugetPackages"
        run: |
          dotnet pack src/NugetPackages.Alpha/NugetPackages.Alpha.csproj -c Release -o ./artifacts \
            -p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }}
          dotnet pack src/NugetPackages.Bravo/NugetPackages.Bravo.csproj -c Release -o ./artifacts \
            -p:Version=${{ steps.gitversion.outputs.NuGetVersionV2 }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: examples/NugetPackages/artifacts/*.nupkg

      - name: Publish to GitHub Packages (PR previews)
        run: |
          for f in examples/NugetPackages/artifacts/*.nupkg; do
            dotnet nuget push "$f" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --api-key ${{ github.token }} \
              --skip-duplicate;
          done
