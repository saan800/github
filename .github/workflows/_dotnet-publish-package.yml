name: dotnet-publish-package

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      dotnet-version:
        required: false
        type: string
        default: 8.0.x
      package-artifact-name:
        description: "Name of the artifact to upload to github build artifacts. Should match what was uploaded in dotnet-build-and-package"
        required: false
        type: string
        default: "packages"
      upload-to-github:
        description: "Upload pacakge to github package registry"
        type: boolean
        required: false
        default: false
      upload-to-nuget:
        description: "Upload pacakge to nuget.org registry"
        type: boolean
        required: false
        default: false
    secrets:
      GITHUB_ACCESS_TOKEN:
        description: "(ie: GITHUB_TOKEN) GitHub token to upload package to GitHub Package Registry. Required if upload-to-github is true"
        required: false
      NUGET_API_KEY:
        description: "API key for nuget.org. Required if upload-to-nuget is true"
        required: false

permissions:
  contents: read

jobs:
  publish-nuget-package:
    runs-on: ${{ inputs.os }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            aka.ms:443
            api.nuget.org:443
            dc.services.visualstudio.com:443
            dotnetcli.azureedge.net:443
            nuget.pkg.github.com:443
            www.nuget.org:443

      # Download the artifact generated in the build job
      - name: Download artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # 4.2.1
        with:
          name: ${{ inputs.package-artifact-name }}
          path: ./build-packages # Path to download the artifact

      - name: Install .NET Core ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Publish nuget pacakge(s) to GitHub Package Registry
        if: ${{ inputs.upload-to-github }}
        run: >
          dotnet nuget push ./build-packages/*.nupkg
          --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
          --api-key ${{ secrets.GITHUB_ACCESS_TOKEN }}

      - name: Publish symbol pacakge(s) to GitHub Package Registry
        if: ${{ inputs.upload-to-github }}
        run: >
          dotnet nuget push ./build-packages/*.snupkg
          --skip-duplicate
          --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
          --api-key ${{ secrets.GITHUB_ACCESS_TOKEN }}

      - name: Publish nuget and symbols package(s) to NuGet.org
        if: ${{ inputs.upload-to-nuget }}
        run: >
          dotnet nuget push ./build-packages/*.nupkg
          --source https://api.nuget.org/v3/index.json
          --api-key ${{ secrets.NUGET_API_KEY }}
