name: dotnet-build-test-pack-publish-nuget

on:
  workflow_call:
    inputs:
      working-directory:
        description: "The working directory for the job. Defaults to '.' which is the root of the repository. Do not include trailing '/'"
        required: false
        type: string
        default: "."
      os:
        description: The operating system to run non-matrix jobs on. e.g. "ubuntu-latest" or "windows-latest".
        required: false
        type: string
        default: ubuntu-latest
      dotnet-version-matrix:
        description: 'JSON array of dotnet-version/framework pairs, used for testing. Must be on one line. eg ''[{ "dotnet-version": "8.0.x", "framework": "net8.0" }, { "dotnet-version": "9.0.x", "framework": "net9.0" }]'''
        required: false
        type: string
      dotnet-version:
        description: The dotnet version to run the non-matrix jobs with. e.g. "9.0.x".
        required: false
        type: string
        default: 9.0.x
      num-github-prerelease-packages-to-keep:
        description: "We cleanup github prerelease nuget packages. Configure how many to keep"
        type: number
        required: false
        default: 50
      codecov-slug:
        description: "Slug to upload code coverage results for Codecov. e.g. saan800/saansoft-correlationId"
        required: false
        type: string
      codecov-flag:
        description: "Flag to use for Codecov. e.g. unittests"
        required: false
        type: string
        default: unittests
      is-release-branch:
        description: 'If its a release branch or not. eg release from main check would be "github.ref==''refs/heads/main''" '
        type: boolean
        required: true
      force-release:
        description: "Force a release regardless of PR labels"
        type: boolean
        required: false
        default: false
    secrets:
      GITHUB_ACCESS_TOKEN:
        description: "(ie: GITHUB_TOKEN) GitHub token"
        required: true
      NUGET_API_KEY:
        description: "API key for nuget.org. Required if upload-to-nuget is true"
        required: false
      CODECOV_TOKEN:
        description: "Token for CodeCov. Required if codecov-slug is set"
        required: false

permissions:
  contents: read
  pull-requests: read

jobs:
  get-version:
    uses: ./.github/workflows/_version.yml
    with:
      is-release-branch: ${{ inputs.is-release-branch }}

  check-release-eligibility:
    uses: ./.github/workflows/_check-release-eligibility.yml
    permissions:
      contents: read
      pull-requests: read
    with:
      is-release-branch: ${{ inputs.is-release-branch }}
      force-release: ${{ inputs.force-release }}
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}

  build-and-test:
    uses: ./.github/workflows/_dotnet-build-and-test.yml
    with:
      working-directory: ${{ inputs.working-directory }}
      os: ${{ inputs.os }}
      dotnet-version-matrix: ${{ inputs.dotnet-version-matrix }}
      dotnet-version: ${{ inputs.dotnet-version }}
      codecov-slug: ${{ inputs.codecov-slug }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  pack:
    needs:
      - build-and-test
      - get-version
    uses: ./.github/workflows/_dotnet-build-and-pack.yml
    with:
      working-directory: ${{ inputs.working-directory }}
      os: ${{ inputs.os }}
      dotnet-version: ${{ inputs.dotnet-version }}
      package-version: ${{ needs.get-version.outputs.version }}
      package-artifact-name: "packages"
      add-assembly-version: ${{ inputs.is-release-branch }}

  publish:
    needs:
      - pack
      - check-release-eligibility
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/_dotnet-publish-nuget.yml
    with:
      working-directory: ${{ inputs.working-directory }}
      os: ${{ inputs.os }}
      dotnet-version: ${{ inputs.dotnet-version }}
      package-artifact-name: "packages"
      num-github-prerelease-packages-to-keep: ${{ inputs.num-github-prerelease-packages-to-keep }}
      upload-to-github: ${{ inputs.is-release-branch == false && needs.check-release-eligibility.outputs.should-release == 'false' }}
      upload-to-nuget: ${{ needs.check-release-eligibility.outputs.should-release == 'true' }}
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  release:
    needs:
      - publish
      - get-version
      - check-release-eligibility
    if: needs.check-release-eligibility.outputs.should-release == 'true'
    permissions:
      contents: write
    uses: ./.github/workflows/_github-tag-and-release.yml
    with:
      os: ${{ inputs.os }}
      version: ${{ needs.get-version.outputs.version }}
    secrets:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
