name: dotnet-build-and-package

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      dotnet-version:
        required: false
        type: string
        default: 8.0.x
      package-version:
        required: true
        type: string
      package-artifact-name:
        description: "Name of the artifact to upload to github build artifacts"
        required: false
        type: string
        default: "packages"
      add-assembly-version:
        description: "Should only include assembly version on main branch"
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  dotnet-build-and-package:
    runs-on: ${{ inputs.os }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            aka.ms:443
            api.nuget.org:443
            dc.services.visualstudio.com:443
            dotnetcli.azureedge.net:443
            github.com:443

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Cache .NET dependencies
      - name: Cache .NET packages
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # 4.1.2
        with:
          path: ~/.nuget/packages # Path to the NuGet package cache
          key: ${{ inputs.os }}-${{ inputs.dotnet-version }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ inputs.os }}-${{ inputs.dotnet-version }}-nuget-

      - name: Install .NET Core ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4.1.0
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Restore packages
        run: dotnet restore

      # Only include assembly version on main branch
      - name: Package with assembly number
        if: ${{ inputs.add-assembly-version }}
        run: >
          dotnet pack
          --no-restore
          --configuration Release
          --output build-packages
          /p:Version=${{ inputs.package-version }}
          /p:FileVersion=${{ inputs.package-version }}
          /p:AssemblyVersion=${{ inputs.package-version }}
          /p:AssemblyInformationalVersion=${{ inputs.package-version }}

      # Packaging step for non-main branches (without AssemblyVersion)
      - name: Package without assembly number
        if: ${{ !inputs.add-assembly-version }}
        run: >
          dotnet pack
          --no-restore
          --configuration Release
          --output build-packages
          /p:Version=${{ inputs.package-version }}

      - name: Upload artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ inputs.package-artifact-name }}
          path: |
            build-packages/*.nupkg
            build-packages/*.snupkg
          if-no-files-found: error
