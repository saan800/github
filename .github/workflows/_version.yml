name: version

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      version-artifact-name:
        description: "Name of the artifact to put the version file in"
        required: false
        type: string
        default: "version"
      is-release-branch:
        description: 'If its a release branch or not. eg release from main check would be "github.ref==''refs/heads/main''" '
        type: boolean
        required: true
    outputs:
      version:
        description: The new version number
        value: ${{ jobs.find-version.outputs.version }}
      current-version:
        description: The current version number
        value: ${{ jobs.find-version.outputs.current-version }}

permissions:
  contents: read

jobs:
  find-version:
    runs-on: ${{ inputs.os }}
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      current-version: ${{ steps.get-version.outputs.current-version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Determine release branch name
        id: release-branch
        run: |
          release_branch="main"
          if [ "${GITHUB_REF_NAME}" = "main" ] && [ "${{ inputs.is-release-branch }}" != "true" ]; then
            release_branch="not-main-release"
          fi

          echo "release-branch-name=$release_branch" >> $GITHUB_OUTPUT
          echo "Release branch name set to: $release_branch"

      - name: Get version
        uses: reecetech/version-increment@a29aa752dc3b8118a2dc2ed93faf0e95a73a9c7e # 2024.10.1
        id: get-version
        with:
          scheme: conventional_commits
          increment: patch
          release-branch: ${{ steps.release-branch.outputs.release-branch-name }}

      - name: Current version
        run: echo "${{ steps.get-version.outputs.current-version }}"

      - name: New version
        id: write_version
        run: |
          VERSION="${{ steps.get-version.outputs.version }}"
          echo "New version: $VERSION"
          echo $VERSION > version.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.version-artifact-name }}
          path: version.txt
          if-no-files-found: error
